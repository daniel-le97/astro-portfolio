---
import { Image } from "astro:assets";
import { Icon } from "astro-icon";
import astronautImage from "~/assets/astronaut.png";
import HeroImage from "~/components/astro/hero-image.astro";
import Starfield from "~/components/astro/starfield.astro";
import GitHubCorner from "./github-corner.astro";
import { navItems } from "~/store/navItems.ts";
import astronaut from '~/assets/spacemanFull.mp4'
// import type { NavItem } from "~/types";

const widths = [450, 800];
const sizes = "(min-width: 640px) 42vw, 67vw";

// const navItems: Array<NavItem> = [
//   { title: "Skills", url: "#skills" },
//   { title: "Showcase", url: "#showcase" },
//   { title: "About", url: "#about" },
// ];
---

<section class="relative h-full">
  <div class="video-container absolute z-50 flex justify-center">
    <video
      width="200"
      height="1004"
      preload="true"
      loop
      muted
      autoplay
      playsinline
      class="object-fit"
    >
      <source src={astronaut} type="video/mp4" />
      <!-- Add additional sources here for other formats, e.g., WebM, Ogg -->
    </video>

    <GitHubCorner />

    <div class="absolute grid h-full place-items-center sm:grid-cols-2">
      <h2
        class="flex flex-col gap-2  sm:gap-4 sm:self-auto sm:justify-self-end self-center"
      >
        <div
          class="gradient-text text-center font-extrabold text-8xl"
        >
          Daniel Le
          <br /> Software Engineer.
        </div>
      </h2>

      <div class="absolute bottom-4 right-4 items-center gap-6">
        <nav class="block sm:hidden"> <!-- Hide on small screens -->
          <ul class="flex items-center gap-6">
            {
              navItems.map(({ title, url }) => (
                <li>
                  <a class="" href={url}>
                    {title}
                  </a>
                </li>
              ))
            }
          </ul>
        </nav>
        <nav class="hidden sm:block">
          <ul class="flex items-center justify-center gap-6">
            {
              navItems.map(({ title, url }) => (
                <li>
                  <a class="" href={url}>
                    {title}
                  </a>
                </li>
              ))
            }
          </ul>
        </nav>
      </div>
    </div>
  </div>
</section>

<script>
    import MicroModal from "micromodal";
  import invariant from "tiny-invariant";

  const menuModalId = "menu-modal";

  const header = document.querySelector("#page-header") as HTMLElement;
  const page = document.documentElement;
  const menu = document.querySelector(`#${menuModalId} ul`);
  const openNavButton = document.querySelector("#open-nav-button");
  const closeNavButton = document.querySelector("#close-nav-button");

  invariant(header, "header should not be null");
  invariant(menu, "menu should not be null");
  invariant(openNavButton, "openNavButton should not be null");
  invariant(closeNavButton, "closeNavButton should not be null");

  const openMenu = () => {
    MicroModal.show(menuModalId, { disableScroll: true });
  };

  const closeMenu = () => {
    MicroModal.close(menuModalId);
  };

  openNavButton.addEventListener("click", openMenu);
  closeNavButton.addEventListener("click", closeMenu);


  menu.addEventListener("click", (event) => {
    if ((event.target as HTMLElement).tagName === "A") {
      closeMenu();
    }
  });
</script>

<noscript>
  <style>
    #splash-bg-fallback {
      display: block;
    }
  </style>
</noscript>

<style>
  @keyframes float {
    0% {
      transform: translate3d(0, 0, 0);
    }

    100% {
      transform: translate3d(0, 30px, 0);
    }
  }

  #astronaut {
    animation: float linear 2.5s infinite alternate;
  }

  @media (prefers-reduced-motion: reduce) {
    #astronaut {
      @apply animate-none;
    }

    :global(#starfield) {
      @apply hidden;
    }

    #splash-bg-fallback {
      @apply block;
    }
  }
</style>
